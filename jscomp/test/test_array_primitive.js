// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Caml_array = require("../../lib/js/caml_array.js");

function caml_array_sub(x, offset, len) {
  let result = new Array(len);
  for(let j = 0; j < len; ++j){
    Caml_array.set(result, j, Caml_array.get(x, offset + j | 0));
  }
  return result;
}

function caml_array_set(xs, index, newval) {
  if (!(index < 0 || index >= xs.length)) {
    return Caml_array.set(xs, index, newval);
  }
  throw {
    RE_EXN_ID: "Invalid_argument",
    _1: "index out of bounds",
    Error: new Error()
  };
}

function caml_array_get(xs, index) {
  if (!(index < 0 || index >= xs.length)) {
    return Caml_array.get(xs, index);
  }
  throw {
    RE_EXN_ID: "Invalid_argument",
    _1: "index out of bounds",
    Error: new Error()
  };
}

function caml_make_vect(len, init) {
  let b = new Array(len);
  for(let i = 0; i < len; ++i){
    Caml_array.set(b, i, init);
  }
  return b;
}

exports.caml_array_sub = caml_array_sub;
exports.caml_array_set = caml_array_set;
exports.caml_array_get = caml_array_get;
exports.caml_make_vect = caml_make_vect;
/* No side effect */
